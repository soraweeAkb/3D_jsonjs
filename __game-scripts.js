var TouchInput=pc.createScript("touchInput");TouchInput.attributes.add("orbitSensitivity",{type:"number",default:.4,title:"Orbit Sensitivity",description:"How fast the camera moves around the orbit. Higher is faster"}),TouchInput.attributes.add("distanceSensitivity",{type:"number",default:.2,title:"Distance Sensitivity",description:"How fast the camera moves in and out. Higher is faster"}),TouchInput.prototype.initialize=function(){this.orbitCamera=this.entity.script.orbitCamera,this.lastTouchPoint=new pc.Vec2,this.lastPinchMidPoint=new pc.Vec2,this.lastPinchDistance=0,this.orbitCamera&&this.app.touch&&(this.app.touch.on(pc.EVENT_TOUCHSTART,this.onTouchStartEndCancel,this),this.app.touch.on(pc.EVENT_TOUCHEND,this.onTouchStartEndCancel,this),this.app.touch.on(pc.EVENT_TOUCHCANCEL,this.onTouchStartEndCancel,this),this.app.touch.on(pc.EVENT_TOUCHMOVE,this.onTouchMove,this),this.on("destroy",(function(){this.app.touch.off(pc.EVENT_TOUCHSTART,this.onTouchStartEndCancel,this),this.app.touch.off(pc.EVENT_TOUCHEND,this.onTouchStartEndCancel,this),this.app.touch.off(pc.EVENT_TOUCHCANCEL,this.onTouchStartEndCancel,this),this.app.touch.off(pc.EVENT_TOUCHMOVE,this.onTouchMove,this)})))},TouchInput.prototype.getPinchDistance=function(t,i){var o=t.x-i.x,n=t.y-i.y;return Math.sqrt(o*o+n*n)},TouchInput.prototype.calcMidPoint=function(t,i,o){o.set(i.x-t.x,i.y-t.y),o.scale(.5),o.x+=t.x,o.y+=t.y},TouchInput.prototype.onTouchStartEndCancel=function(t){var i=t.touches;1==i.length?this.lastTouchPoint.set(i[0].x,i[0].y):2==i.length&&(this.lastPinchDistance=this.getPinchDistance(i[0],i[1]),this.calcMidPoint(i[0],i[1],this.lastPinchMidPoint))},TouchInput.fromWorldPoint=new pc.Vec3,TouchInput.toWorldPoint=new pc.Vec3,TouchInput.worldDiff=new pc.Vec3,TouchInput.prototype.pan=function(t){var i=TouchInput.fromWorldPoint,o=TouchInput.toWorldPoint,n=TouchInput.worldDiff,h=this.entity.camera,c=this.orbitCamera.distance;h.screenToWorld(t.x,t.y,c,i),h.screenToWorld(this.lastPinchMidPoint.x,this.lastPinchMidPoint.y,c,o),n.sub2(o,i),this.orbitCamera.pivotPoint.add(n)},TouchInput.pinchMidPoint=new pc.Vec2,TouchInput.prototype.onTouchMove=function(t){var i=TouchInput.pinchMidPoint,o=t.touches;if(1==o.length){var n=o[0];this.orbitCamera.pitch-=(n.y-this.lastTouchPoint.y)*this.orbitSensitivity,this.orbitCamera.yaw-=(n.x-this.lastTouchPoint.x)*this.orbitSensitivity,this.lastTouchPoint.set(n.x,n.y)}else if(2==o.length){var h=this.getPinchDistance(o[0],o[1]),c=h-this.lastPinchDistance;this.lastPinchDistance=h,this.orbitCamera.distance-=c*this.distanceSensitivity*.1*(.1*this.orbitCamera.distance),this.calcMidPoint(o[0],o[1],i),this.pan(i),this.lastPinchMidPoint.copy(i)}};var OrbitCamera=pc.createScript("orbitCamera");OrbitCamera.attributes.add("autoRender",{type:"boolean",default:!0,title:"Auto Render",description:"Disable to only render when camera is moving (saves power when the camera is still)"}),OrbitCamera.attributes.add("distanceInit",{type:"number",default:0,title:"Distance Init",description:"カメラとオブジェクトの距離の初期値です"}),OrbitCamera.attributes.add("distanceMax",{type:"number",default:0,title:"Distance Max",description:"Setting this at 0 will give an infinite distance limit"}),OrbitCamera.attributes.add("distanceMin",{type:"number",default:0,title:"Distance Min"}),OrbitCamera.attributes.add("pitchAngleMax",{type:"number",default:90,title:"Pitch Angle Max (degrees)"}),OrbitCamera.attributes.add("pitchAngleMin",{type:"number",default:-90,title:"Pitch Angle Min (degrees)"}),OrbitCamera.attributes.add("yawAngleMax",{type:"number",default:180,title:"Yaw Angle Max (degrees)"}),OrbitCamera.attributes.add("yawAngleMin",{type:"number",default:-180,title:"Yaw Angle Min (degrees)"}),OrbitCamera.attributes.add("inertiaFactor",{type:"number",default:0,title:"Inertia Factor",description:"Higher value means that the camera will continue moving after the user has stopped dragging. 0 is fully responsive."}),OrbitCamera.attributes.add("focusEntity",{type:"entity",title:"Focus Entity",description:"Entity for the camera to focus on. If blank, then the camera will use the whole scene"}),OrbitCamera.attributes.add("frameOnStart",{type:"boolean",default:!0,title:"Frame on Start",description:'Frames the entity or scene at the start of the application."'}),Object.defineProperty(OrbitCamera.prototype,"distance",{get:function(){return this._targetDistance},set:function(t){this._targetDistance=this._clampDistance(t)}}),Object.defineProperty(OrbitCamera.prototype,"pitch",{get:function(){return this._targetPitch},set:function(t){this._targetPitch=this._clampPitchAngle(t)}}),Object.defineProperty(OrbitCamera.prototype,"yaw",{get:function(){return this._targetYaw},set:function(t){if(!(t<this.yawAngleMin||t>this.yawAngleMax)){this._targetYaw=t;var i=(this._targetYaw-this._yaw)%360;this._targetYaw=i>180?this._yaw-(360-i):i<-180?this._yaw+(360+i):this._yaw+i}}}),Object.defineProperty(OrbitCamera.prototype,"pivotPoint",{get:function(){return this._pivotPoint},set:function(t){this._pivotPoint.copy(t)}}),OrbitCamera.prototype.focus=function(t){this._buildAabb(t,0);var i=this._modelsAabb.halfExtents;Math.max(i.x,Math.max(i.y,i.z));Math.tan(.5*this.entity.camera.fov*pc.math.DEG_TO_RAD),this.distance=this.distanceInit,this._removeInertia(),this._pivotPoint.copy(this._modelsAabb.center)},OrbitCamera.distanceBetween=new pc.Vec3,OrbitCamera.prototype.resetAndLookAtPoint=function(t,i){this.pivotPoint.copy(i),this.entity.setPosition(t),this.entity.lookAt(i);var e=OrbitCamera.distanceBetween;e.sub2(i,t),this.distance=e.length(),this.pivotPoint.copy(i);var a=this.entity.getRotation();this.yaw=this._calcYaw(a),this.pitch=this._calcPitch(a,this.yaw),this._removeInertia(),this._updatePosition(),this.autoRender||(this.app.renderNextFrame=!0)},OrbitCamera.prototype.resetAndLookAtEntity=function(t,i){this._buildAabb(i,0),this.resetAndLookAtPoint(t,this._modelsAabb.center)},OrbitCamera.prototype.reset=function(t,i,e){this.pitch=i,this.yaw=t,this.distance=e,this._removeInertia(),this.autoRender||(this.app.renderNextFrame=!0)},OrbitCamera.prototype.initialize=function(){this._checkAspectRatio(),this._modelsAabb=new pc.BoundingBox,this._buildAabb(this.focusEntity||this.app.root,0),this.entity.lookAt(this._modelsAabb.center),this._pivotPoint=new pc.Vec3,this._pivotPoint.copy(this._modelsAabb.center),this._lastFramePivotPoint=this._pivotPoint.clone();var t=this.entity.getRotation();if(this._yaw=this._calcYaw(t),this._pitch=this._clampPitchAngle(this._calcPitch(t,this._yaw)),this.entity.setLocalEulerAngles(this._pitch,this._yaw,0),this._distance=0,this._targetYaw=this._yaw,this._targetPitch=this._pitch,this.frameOnStart)this.focus(this.focusEntity||this.app.root);else{var i=new pc.Vec3;i.sub2(this.entity.getPosition(),this._pivotPoint),this._distance=this._clampDistance(i.length())}this._targetDistance=this._distance,this._autoRenderDefault=this.app.autoRender,this.app.autoRender&&(this.app.autoRender=this.autoRender),this.autoRender||(this.app.renderNextFrame=!0),this.on("attr:autoRender",(function(t,i){this.app.autoRender=t,this.autoRender||(this.app.renderNextFrame=!0)}),this),this.on("attr:distanceMin",(function(t,i){this._targetDistance=this._clampDistance(this._distance)}),this),this.on("attr:distanceMax",(function(t,i){this._targetDistance=this._clampDistance(this._distance)}),this),this.on("attr:pitchAngleMin",(function(t,i){this._targetPitch=this._clampPitchAngle(this._pitch)}),this),this.on("attr:pitchAngleMax",(function(t,i){this._targetPitch=this._clampPitchAngle(this._pitch)}),this),this.on("attr:focusEntity",(function(t,i){this.frameOnStart?this.focus(t||this.app.root):this.resetAndLookAtEntity(this.entity.getPosition(),t||this.app.root)}),this),this.on("attr:frameOnStart",(function(t,i){t&&this.focus(this.focusEntity||this.app.root)}),this);var onResizeCanvas=function(){this._checkAspectRatio(),this.autoRender||(this.app.renderNextFrame=!0)};this.app.graphicsDevice.on("resizecanvas",onResizeCanvas,this),this.on("destroy",(function(){this.app.graphicsDevice.off("resizecanvas",onResizeCanvas,this),this.app.autoRender=this._autoRenderDefault}),this)},OrbitCamera.prototype.update=function(t){if(!this.autoRender){var i=Math.abs(this._targetDistance-this._distance),e=Math.abs(this._targetYaw-this._yaw),a=Math.abs(this._targetPitch-this._pitch),s=this._lastFramePivotPoint.distance(this._pivotPoint);this.app.renderNextFrame=this.app.renderNextFrame||i>.01||e>.01||a>.01||s>0}var n=0===this.inertiaFactor?1:Math.min(t/this.inertiaFactor,1);this._distance=pc.math.lerp(this._distance,this._targetDistance,n),this._yaw=pc.math.lerp(this._yaw,this._targetYaw,n),this._pitch=pc.math.lerp(this._pitch,this._targetPitch,n),this._lastFramePivotPoint.copy(this._pivotPoint),this._updatePosition()},OrbitCamera.prototype._updatePosition=function(){this.entity.setLocalPosition(0,0,0),this.entity.setLocalEulerAngles(this._pitch,this._yaw,0);var t=this.entity.getPosition();t.copy(this.entity.forward),t.scale(-this._distance),t.add(this.pivotPoint),this.entity.setPosition(t)},OrbitCamera.prototype._removeInertia=function(){this._yaw=this._targetYaw,this._pitch=this._targetPitch,this._distance=this._targetDistance},OrbitCamera.prototype._checkAspectRatio=function(){var t=this.app.graphicsDevice.height,i=this.app.graphicsDevice.width;this.entity.camera.horizontalFov=t>i},OrbitCamera.prototype._buildAabb=function(t,i){var e,a=0,s=0;if(t instanceof pc.Entity){var n=[],r=t.findComponents("render");for(a=0;a<r.length;++a)if(e=r[a].meshInstances)for(s=0;s<e.length;s++)n.push(e[s]);var h=t.findComponents("model");for(a=0;a<h.length;++a)if(e=h[a].meshInstances)for(s=0;s<e.length;s++)n.push(e[s]);for(a=0;a<n.length;a++)0===i?this._modelsAabb.copy(n[a].aabb):this._modelsAabb.add(n[a].aabb),i+=1}for(a=0;a<t.children.length;++a)i+=this._buildAabb(t.children[a],i);return i},OrbitCamera.prototype._calcYaw=function(t){var i=new pc.Vec3;return t.transformVector(pc.Vec3.FORWARD,i),Math.atan2(-i.x,-i.z)*pc.math.RAD_TO_DEG},OrbitCamera.prototype._clampDistance=function(t){return this.distanceMax>0?pc.math.clamp(t,this.distanceMin,this.distanceMax):Math.max(t,this.distanceMin)},OrbitCamera.prototype._clampPitchAngle=function(t){return pc.math.clamp(t,-this.pitchAngleMax,-this.pitchAngleMin)},OrbitCamera.quatWithoutYaw=new pc.Quat,OrbitCamera.yawOffset=new pc.Quat,OrbitCamera.prototype._calcPitch=function(t,i){var e=OrbitCamera.quatWithoutYaw,a=OrbitCamera.yawOffset;a.setFromEulerAngles(0,-i,0),e.mul2(a,t);var s=new pc.Vec3;return e.transformVector(pc.Vec3.FORWARD,s),Math.atan2(s.y,-s.z)*pc.math.RAD_TO_DEG};var MouseInput=pc.createScript("mouseInput");MouseInput.attributes.add("orbitSensitivity",{type:"number",default:.3,title:"Orbit Sensitivity",description:"How fast the camera moves around the orbit. Higher is faster"}),MouseInput.attributes.add("distanceSensitivity",{type:"number",default:.15,title:"Distance Sensitivity",description:"How fast the camera moves in and out. Higher is faster"}),MouseInput.prototype.initialize=function(){if(this.orbitCamera=this.entity.script.orbitCamera,this.orbitCamera){var t=this,onMouseOut=function(o){t.onMouseOut(o)};this.app.mouse.on(pc.EVENT_MOUSEDOWN,this.onMouseDown,this),this.app.mouse.on(pc.EVENT_MOUSEUP,this.onMouseUp,this),this.app.mouse.on(pc.EVENT_MOUSEMOVE,this.onMouseMove,this),this.app.mouse.on(pc.EVENT_MOUSEWHEEL,this.onMouseWheel,this),window.addEventListener("mouseout",onMouseOut,!1),this.on("destroy",(function(){this.app.mouse.off(pc.EVENT_MOUSEDOWN,this.onMouseDown,this),this.app.mouse.off(pc.EVENT_MOUSEUP,this.onMouseUp,this),this.app.mouse.off(pc.EVENT_MOUSEMOVE,this.onMouseMove,this),this.app.mouse.off(pc.EVENT_MOUSEWHEEL,this.onMouseWheel,this),window.removeEventListener("mouseout",onMouseOut,!1)}))}this.app.mouse.disableContextMenu(),this.lookButtonDown=!1,this.panButtonDown=!1,this.lastPoint=new pc.Vec2},MouseInput.fromWorldPoint=new pc.Vec3,MouseInput.toWorldPoint=new pc.Vec3,MouseInput.worldDiff=new pc.Vec3,MouseInput.prototype.pan=function(t){var o=MouseInput.fromWorldPoint,e=MouseInput.toWorldPoint,i=MouseInput.worldDiff,s=this.entity.camera,n=this.orbitCamera.distance;s.screenToWorld(t.x,t.y,n,o),s.screenToWorld(this.lastPoint.x,this.lastPoint.y,n,e),i.sub2(e,o),this.orbitCamera.pivotPoint.add(i)},MouseInput.prototype.onMouseDown=function(t){switch(t.button){case pc.MOUSEBUTTON_LEFT:this.lookButtonDown=!0;break;case pc.MOUSEBUTTON_MIDDLE:case pc.MOUSEBUTTON_RIGHT:this.panButtonDown=!0}},MouseInput.prototype.onMouseUp=function(t){switch(t.button){case pc.MOUSEBUTTON_LEFT:this.lookButtonDown=!1;break;case pc.MOUSEBUTTON_MIDDLE:case pc.MOUSEBUTTON_RIGHT:this.panButtonDown=!1}},MouseInput.prototype.onMouseMove=function(t){pc.app.mouse;this.lookButtonDown?(this.orbitCamera.pitch-=t.dy*this.orbitSensitivity,this.orbitCamera.yaw-=t.dx*this.orbitSensitivity):this.panButtonDown&&this.pan(t),this.lastPoint.set(t.x,t.y)},MouseInput.prototype.onMouseWheel=function(t){this.orbitCamera.distance-=t.wheel*this.distanceSensitivity*(.1*this.orbitCamera.distance),t.event.preventDefault()},MouseInput.prototype.onMouseOut=function(t){this.lookButtonDown=!1,this.panButtonDown=!1};var KeyboardInput=pc.createScript("keyboardInput");KeyboardInput.prototype.initialize=function(){this.orbitCamera=this.entity.script.orbitCamera},KeyboardInput.prototype.postInitialize=function(){this.orbitCamera&&(this.startDistance=this.orbitCamera.distance,this.startYaw=this.orbitCamera.yaw,this.startPitch=this.orbitCamera.pitch,this.startPivotPosition=this.orbitCamera.pivotPoint.clone())},KeyboardInput.prototype.update=function(t){this.orbitCamera&&this.app.keyboard.wasPressed(pc.KEY_SPACE)&&(this.orbitCamera.reset(this.startYaw,this.startPitch,this.startDistance),this.orbitCamera.pivotPoint=this.startPivotPosition)};function VignetteEffect(e){pc.PostEffect.call(this,e);var t=["uniform sampler2D uColorBuffer;","uniform float uDarkness;","uniform float uOffset;","","varying vec2 vUv0;","","void main() {","    vec4 texel = texture2D(uColorBuffer, vUv0);","    vec2 uv = (vUv0 - vec2(0.5)) * vec2(uOffset);","    gl_FragColor = vec4(mix(texel.rgb, vec3(1.0 - uDarkness), dot(uv, uv)), texel.a);","}"].join("\n");this.vignetteShader=pc.createShaderFromCode(e,pc.PostEffect.quadVertexShader,t,"VignetteShader",{aPosition:pc.SEMANTIC_POSITION}),this.offset=1,this.darkness=1}VignetteEffect.prototype=Object.create(pc.PostEffect.prototype),VignetteEffect.prototype.constructor=VignetteEffect,Object.assign(VignetteEffect.prototype,{render:function(e,t,f){var s=this.device.scope;s.resolve("uColorBuffer").setValue(e.colorBuffer),s.resolve("uOffset").setValue(this.offset),s.resolve("uDarkness").setValue(this.darkness),this.drawQuad(t,this.vignetteShader,f)}});var Vignette=pc.createScript("vignette");Vignette.attributes.add("offset",{type:"number",default:1,min:0,title:"Offset"}),Vignette.attributes.add("darkness",{type:"number",default:1,title:"Darkness"}),Vignette.prototype.initialize=function(){this.effect=new VignetteEffect(this.app.graphicsDevice),this.effect.offset=this.offset,this.effect.darkness=this.darkness,this.on("attr",(function(e,t){this.effect[e]=t}),this);var e=this.entity.camera.postEffects;e.addEffect(this.effect),this.on("state",(function(t){t?e.addEffect(this.effect):e.removeEffect(this.effect)})),this.on("destroy",(function(){e.removeEffect(this.effect)}))};function BokehEffect(e){pc.PostEffect.call(this,e),this.needsDepthBuffer=!0;var r=[pc.shaderChunks.screenDepthPS,"","varying vec2 vUv0;","","uniform sampler2D uColorBuffer;","","uniform float uMaxBlur;","uniform float uAperture;","","uniform float uFocus;","uniform float uAspect;","","void main()","{","    vec2 aspectCorrect = vec2( 1.0, uAspect );","","    float getlineard = getLinearScreenDepth(vUv0);","    float getgammad = exp(getlineard);","vec2 uv = (gl_FragCoord.xy - 0.5 * uScreenSize.xy) / uScreenSize.y;","uv.y *= 1.0;","uv.x *= 0.7;","float distance = length(uv);","float factor = smoothstep(0.0, sqrt(5.4), distance);","","    vec2 dofblur = vec2(clamp( factor * (uAperture), -uMaxBlur, uMaxBlur ) );","","    vec2 dofblur9 = dofblur * 0.9 ;","    vec2 dofblur7 = dofblur * 0.7 ;","    vec2 dofblur4 = dofblur * 0.4 ;","","    vec4 col;","","    col  = texture2D( uColorBuffer, vUv0 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.0,   0.4  ) * aspectCorrect ) * dofblur );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.15,  0.37 ) * aspectCorrect ) * dofblur );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.29,  0.29 ) * aspectCorrect ) * dofblur );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.37,  0.15 ) * aspectCorrect ) * dofblur );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.40,  0.0  ) * aspectCorrect ) * dofblur );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.37, -0.15 ) * aspectCorrect ) * dofblur );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.29, -0.29 ) * aspectCorrect ) * dofblur );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.15, -0.37 ) * aspectCorrect ) * dofblur );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.0,  -0.4  ) * aspectCorrect ) * dofblur );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.15,  0.37 ) * aspectCorrect ) * dofblur );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.29,  0.29 ) * aspectCorrect ) * dofblur );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.37,  0.15 ) * aspectCorrect ) * dofblur );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.4,   0.0  ) * aspectCorrect ) * dofblur );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.37, -0.15 ) * aspectCorrect ) * dofblur );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.29, -0.29 ) * aspectCorrect ) * dofblur );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.15, -0.37 ) * aspectCorrect ) * dofblur );","","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.15,  0.37 ) * aspectCorrect ) * dofblur9 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.37,  0.15 ) * aspectCorrect ) * dofblur9 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.37, -0.15 ) * aspectCorrect ) * dofblur9 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.15, -0.37 ) * aspectCorrect ) * dofblur9 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.15,  0.37 ) * aspectCorrect ) * dofblur9 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.37,  0.15 ) * aspectCorrect ) * dofblur9 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.37, -0.15 ) * aspectCorrect ) * dofblur9 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.15, -0.37 ) * aspectCorrect ) * dofblur9 );","","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.29,  0.29 ) * aspectCorrect ) * dofblur7 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.40,  0.0  ) * aspectCorrect ) * dofblur7 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.29, -0.29 ) * aspectCorrect ) * dofblur7 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.0,  -0.4  ) * aspectCorrect ) * dofblur7 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.29,  0.29 ) * aspectCorrect ) * dofblur7 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.4,   0.0  ) * aspectCorrect ) * dofblur7 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.29, -0.29 ) * aspectCorrect ) * dofblur7 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.0,   0.4  ) * aspectCorrect ) * dofblur7 );","","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.29,  0.29 ) * aspectCorrect ) * dofblur4 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.4,   0.0  ) * aspectCorrect ) * dofblur4 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.29, -0.29 ) * aspectCorrect ) * dofblur4 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.0,  -0.4  ) * aspectCorrect ) * dofblur4 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.29,  0.29 ) * aspectCorrect ) * dofblur4 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.4,   0.0  ) * aspectCorrect ) * dofblur4 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2( -0.29, -0.29 ) * aspectCorrect ) * dofblur4 );","    col += texture2D( uColorBuffer, vUv0 + ( vec2(  0.0,   0.4  ) * aspectCorrect ) * dofblur4 );","","    gl_FragColor = col / 41.0;","    gl_FragColor.a = 1.0;","}"].join("\n");this.shader=pc.createShaderFromCode(e,pc.PostEffect.quadVertexShader,r,"BokehShader",{aPosition:pc.SEMANTIC_POSITION}),this.maxBlur=.02,this.aperture=1,this.focus=1}BokehEffect.prototype=Object.create(pc.PostEffect.prototype),BokehEffect.prototype.constructor=BokehEffect,Object.assign(BokehEffect.prototype,{render:function(e,r,t){var o=this.device,u=o.scope;u.resolve("uMaxBlur").setValue(this.maxBlur),u.resolve("uAperture").setValue(this.aperture),u.resolve("uFocus").setValue(this.focus),u.resolve("uAspect").setValue(o.width/o.height),u.resolve("uColorBuffer").setValue(e.colorBuffer),this.drawQuad(r,this.shader,t)}});var Bokeh=pc.createScript("bokeh");Bokeh.attributes.add("maxBlur",{type:"number",default:10,min:0,max:10,title:"Max Blur"}),Bokeh.attributes.add("aperture",{type:"number",default:10,min:0,max:10,title:"Aperture"}),Bokeh.attributes.add("focus",{type:"number",default:1,title:"Focus"}),Bokeh.prototype.initialize=function(){this.effect=new BokehEffect(this.app.graphicsDevice),this.effect.maxBlur=this.maxBlur,this.effect.aperture=this.aperture,this.effect.focus=this.focus,this.on("attr",(function(e,r){this.effect[e]=r}),this);var e=this.entity.camera.postEffects;e.addEffect(this.effect),this.on("state",(function(r){r?e.addEffect(this.effect):e.removeEffect(this.effect)})),this.on("destroy",(function(){e.removeEffect(this.effect)}))};(()=>{class BloomEffect extends pc.PostEffect{constructor(e,t){super(e),this.width=this.device.width,this.height=this.device.height,this.hdr=!0,this.params={blendmode:"add",iterations:12,miplimit:4,strength:5,thresholdA:0,thresholdB:1,radius:new pc.Vec2(1,1),hdrformat:pc.PIXELFORMAT_111110F,tonemapper:pc.TONEMAP_NONE,gamma:pc.GAMMA_SRGB,exposure:.3},this.targets={downsampled:[],upsampled:[]},this.shader={downsample:null,upsample:null,combine:null},this.configure(t)}configure(e){this.params={...this.params,...e},void 0===e.iterations&&void 0===e.miplimit&&void 0===e.hdrformat||(this.clearRenderTargets(),this.setupRenderTargets(this.params)),void 0===e.blendmode&&void 0===e.tonemapper||this.setupShaders(this.params)}render(e,t,i){this.checkResize();for(let t=0;t<this.targets.downsampled.length;t++){let r=0==t?e:this.targets.downsampled[t-1],s=this.targets.downsampled[t],a=0==t?[this.params.thresholdA,this.params.thresholdB]:[0,0];this.device.scope.resolve("uSource").setValue(r.colorBuffer),this.device.scope.resolve("uResolution").setValue([r.width,r.height]),this.device.scope.resolve("uThreshold").setValue(a),this.drawQuad(s,this.shader.downsample,i)}for(let e=this.targets.downsampled.length-1;e>0;e--){let t=e==this.targets.downsampled.length-1?this.targets.downsampled[e]:this.targets.upsampled[e],r=this.targets.downsampled[e-1],s=this.targets.upsampled[e-1],a=this.params.radius.clone().mulScalar(.01);this.device.scope.resolve("uSource").setValue(t.colorBuffer),this.device.scope.resolve("uSource1").setValue(r.colorBuffer),this.device.scope.resolve("uResolution").setValue([t.width,t.height]),this.device.scope.resolve("uFilterRadius").setValue(a.data),this.drawQuad(s,this.shader.upsample,i)}let r=e,s=this.targets.upsampled[0],a=t;this.device.scope.resolve("uSource").setValue(r.colorBuffer),this.device.scope.resolve("uBloom").setValue(s.colorBuffer),this.device.scope.resolve("uStrength").setValue(.01*this.params.strength),this.device.scope.resolve("uGamma").setValue(this.params.gamma===pc.GAMMA_NONE?1:2.2),this.device.scope.resolve("exposure").setValue(this.params.exposure),this.drawQuad(a,this.shader.combine,i)}checkResize(){this.device.width===this.width&&this.device.height===this.height||(this.clearRenderTargets(),this.setupRenderTargets(this.params),this.width=this.device.width,this.height=this.device.height)}setupShaders(e){this.shader={downsample:this.createDownsampleShader(e),upsample:this.createUpsampleShader(e),combine:this.createCombineShader(e)}}setupRenderTargets(e){this.targets.downsampled=[],this.targets.upsampled=[];for(let t=0;t<e.iterations;t++){let i=this.device.width>>t+1,r=this.device.height>>t+1;i>=e.miplimit&&r>=e.miplimit&&(this.targets.downsampled.push(this.createRenderTarget(i,r,e.hdrformat)),this.targets.upsampled.push(this.createRenderTarget(i,r,e.hdrformat)))}}clearRenderTargets(){for(let e of this.targets.downsampled)this.destroyRenderTarget(e);for(let e of this.targets.upsampled)this.destroyRenderTarget(e)}createRenderTarget(e,t,i){let r=new pc.Texture(this.device,{format:this.requestHDRFormat(i),width:e,height:t,mipmaps:!1,minFilter:pc.FILTER_LINEAR,magFilter:pc.FILTER_LINEAR,addressU:pc.ADDRESS_CLAMP_TO_EDGE,addressV:pc.ADDRESS_CLAMP_TO_EDGE});return new pc.RenderTarget({colorBuffer:r,samples:0,depth:!1})}destroyRenderTarget(e){e&&(e.destroyTextureBuffers(),e.destroy())}requestHDRFormat(e){const t=this.device.extTextureHalfFloat&&this.device.textureHalfFloatRenderable,i=this.device.extTextureFloat&&this.device.textureFloatRenderable;return e===pc.PIXELFORMAT_RGBA32F?i?pc.PIXELFORMAT_RGBA32F:t?pc.PIXELFORMAT_RGBA16F:pc.PIXELFORMAT_111110F:e===pc.PIXELFORMAT_RGBA16F&&t?pc.PIXELFORMAT_RGBA16F:pc.PIXELFORMAT_111110F}destroy(){this.clearRenderTargets()}createDownsampleShader(e){const t=`\n            precision ${this.device.precision} float;\n\n            uniform sampler2D uSource;\n            uniform vec2 uResolution;\n            uniform vec2 uThreshold;\n            varying vec2 vUv0;\n\n            vec3 prefilter (vec3 color, vec2 threshold)\n            {\n                float thres1 = min (threshold.x, threshold.y);\n                float thres2 = max (threshold.x, threshold.y);\n                float brightness = (color.r + color.g + color.b) / 3.0;\n                float factor = smoothstep (thres1, thres2, brightness);\n                return color * factor;\n            }\n\n            void main()\n            {\n                float x = 1.0 / uResolution.x;\n                float y = 1.0 / uResolution.y;\n\n                vec3 a = texture2D (uSource, vec2 (vUv0.x - 2.0 * x, vUv0.y + 2.0 * y)).rgb;\n                vec3 b = texture2D (uSource, vec2 (vUv0.x,           vUv0.y + 2.0 * y)).rgb;\n                vec3 c = texture2D (uSource, vec2 (vUv0.x + 2.0 * x, vUv0.y + 2.0 * y)).rgb;\n\n                vec3 d = texture2D (uSource, vec2 (vUv0.x - 2.0 * x, vUv0.y)).rgb;\n                vec3 e = texture2D (uSource, vec2 (vUv0.x,           vUv0.y)).rgb;\n                vec3 f = texture2D (uSource, vec2 (vUv0.x + 2.0 * x, vUv0.y)).rgb;\n\n                vec3 g = texture2D (uSource, vec2 (vUv0.x - 2.0 * x, vUv0.y - 2.0 * y)).rgb;\n                vec3 h = texture2D (uSource, vec2 (vUv0.x,           vUv0.y - 2.0 * y)).rgb;\n                vec3 i = texture2D (uSource, vec2 (vUv0.x + 2.0 * x, vUv0.y - 2.0 * y)).rgb;\n\n                vec3 j = texture2D (uSource, vec2 (vUv0.x - x, vUv0.y + y)).rgb;\n                vec3 k = texture2D (uSource, vec2 (vUv0.x + x, vUv0.y + y)).rgb;\n                vec3 l = texture2D (uSource, vec2 (vUv0.x - x, vUv0.y - y)).rgb;\n                vec3 m = texture2D (uSource, vec2 (vUv0.x + x, vUv0.y - y)).rgb;\n\n                vec3 downsample = vec3 (0.0);\n                downsample += e * 0.125;\n                downsample += (a + c + g + i) * 0.03125;\n                downsample += (b + d + f + h) * 0.0625;\n                downsample += (j + k + l + m) * 0.125;\n\n                downsample = prefilter (downsample, uThreshold);\n\n                gl_FragColor = vec4 (downsample, 1.0);\n            }\n        `;return pc.createShaderFromCode(this.device,pc.PostEffect.quadVertexShader,t,`Bloom_Downsample_${Date.now()}`,{aPosition:pc.SEMANTIC_POSITION})}createUpsampleShader(e){const t=`\n            precision ${this.device.precision} float;\n\n            uniform sampler2D uSource;\n            uniform sampler2D uSource1;\n            uniform vec2 uFilterRadius;\n            uniform vec2 uResolution;\n            varying vec2 vUv0;\n\n            void main()\n            {\n                float x = uFilterRadius.x * uResolution.y / uResolution.x;\n                float y = uFilterRadius.y;\n\n                vec3 a = texture2D (uSource, vec2 (vUv0.x - x, vUv0.y + y)).rgb;\n                vec3 b = texture2D (uSource, vec2 (vUv0.x,     vUv0.y + y)).rgb;\n                vec3 c = texture2D (uSource, vec2 (vUv0.x + x, vUv0.y + y)).rgb;\n\n                vec3 d = texture2D (uSource, vec2 (vUv0.x - x, vUv0.y)).rgb;\n                vec3 e = texture2D (uSource, vec2 (vUv0.x,     vUv0.y)).rgb;\n                vec3 f = texture2D (uSource, vec2 (vUv0.x + x, vUv0.y)).rgb;\n\n                vec3 g = texture2D (uSource, vec2 (vUv0.x - x, vUv0.y - y)).rgb;\n                vec3 h = texture2D (uSource, vec2 (vUv0.x,     vUv0.y - y)).rgb;\n                vec3 i = texture2D (uSource, vec2 (vUv0.x + x, vUv0.y - y)).rgb;\n\n                vec3 upsample = vec3 (0.0);\n                upsample += e * 4.0;\n                upsample += (b + d + f + h) * 2.0;\n                upsample += (a + c + g + i);\n                upsample *= 1.0 / 16.0;\n\n                vec3 previous = texture2D (uSource1, vUv0).rgb;\n\n                gl_FragColor = vec4 (upsample + previous, 1.0);\n            }\n        `;return pc.createShaderFromCode(this.device,pc.PostEffect.quadVertexShader,t,`Bloom_Upsample_${Date.now()}`,{aPosition:pc.SEMANTIC_POSITION})}createCombineShader(e){let t,i;switch(e&&e.blendmode){case"add":default:t="#define BLENDMODE_ADD";break;case"screen":t="#define BLENDMODE_SCREEN"}switch(e&&e.tonemapper){case pc.TONEMAP_LINEAR:i=pc.shaderChunks.tonemappingLinearPS;break;case pc.TONEMAP_FILMIC:i=pc.shaderChunks.tonemappingFilmicPS;break;case pc.TONEMAP_HEJL:i=pc.shaderChunks.tonemappingHejlPS;break;case pc.TONEMAP_ACES:i=pc.shaderChunks.tonemappingAcesPS;break;case pc.TONEMAP_ACES2:i=pc.shaderChunks.tonemappingAces2PS;break;default:i=pc.shaderChunks.tonemappingNonePS}const r=`\n            precision ${this.device.precision} float;\n\n            uniform sampler2D uSource;\n            uniform sampler2D uBloom;\n            uniform float uStrength;\n            uniform float uGamma;\n            varying vec2 vUv0;\n\n            ${t}\n            ${i}\n\n            void main()\n            {\n                vec3 color = texture2D (uSource, vUv0).rgb;\n                vec3 bloom = texture2D (uBloom, vUv0).rgb;\n\n                #ifdef BLENDMODE_ADD\n                    color = mix (color, bloom, uStrength);\n                    color = toneMap (color);\n                #endif\n\n                #ifdef BLENDMODE_SCREEN\n                    vec3 c = toneMap (color);\n                    vec3 b = toneMap (uStrength * (bloom - color));\n                    color = 1.0 - (1.0 - c) * (1.0 - b);\n                #endif\n\n                color = pow (color + 0.0000001, vec3 (1.0 / uGamma));\n\n                gl_FragColor = vec4 (color, 1.0);\n            }\n        `;return pc.createShaderFromCode(this.device,pc.PostEffect.quadVertexShader,r,`Bloom_Combine_${Date.now()}`,{aPosition:pc.SEMANTIC_POSITION})}}const e=pc.createScript("HDR Bloom");e.attributes.add("camera",{title:"Camera (Optional)",type:"entity",description:"The camera object to apply bloom effect to. If no camera is provided the script tries\n    to use camera component on its current entity. Eventually if no camera is found there as well -\n    the first camera in pc.app.systems.camera.cameras is used."}),e.attributes.add("blendmode",{title:"Blend Mode",type:"string",default:"add",enum:[{Add:"add"},{Screen:"screen"}],description:"Bloom blending mode. [Add] is using standard additive mixing, [Screen] results in higher\n    contrast in extreme cases like super bright lights, maxed out iterations and low mip limit."}),e.attributes.add("iterations",{title:"Iterations",type:"number",default:12,min:1,max:12,precision:0,description:"Richness of bloom effect. The difference between 1 and 12 in terms of performance is\n    truly negligible so it's recommended to leave it at maximum unless you're targeting specific artistic\n    look. Not all iterations may be used internally since downscaling stops at Mip Limit resolution. Low\n    and medium number of iterations may produce different results on retina and non-retina displays\n    (pc.app.graphicsDevice.maxPixelRatio = 2 or 1), especially with non-zero filter radius."}),e.attributes.add("strength",{title:"Strength",type:"number",default:5,min:0,max:100,precision:1,description:"Blending factor. High values together with bright lights result in a steam room look! :D"}),e.attributes.add("miplimit",{title:"Mip Limit",type:"number",default:4,min:1,max:16,precision:0,description:"This parameter controls the depth of the mip chain by limiting the lowest resolution\n    allowed during downscaling. Going below 4 with maxed out iterations may result in a beautiful full\n    screen glow which is possible only at sufficiently high resolutions (1024 and up at pixel ratio 1)."}),e.attributes.add("thresholdA",{title:"Threshold A",type:"number",default:0,min:0,max:10,precision:1,description:"Thresholding function lower limit. Pixels dimmer than A do not contribute to bloom,\n    pixels brighter than B contribute fully, pixels in (A, B) range contribute with smoothstep curve."}),e.attributes.add("thresholdB",{title:"Threshold B",type:"number",default:1,min:0,max:10,precision:1,description:"Thresholding function upper limit. Pixels dimmer than A do not contribute to bloom,\n    pixels brighter than B contribute fully, pixels in (A, B) range contribute with smoothstep curve."}),e.attributes.add("radius",{title:"Filter Radius",type:"vec2",default:[1,1],description:"Radius of additional blur applied during upsampling stage. It's mostly used to\n    dilute a minor moire artefact that is visible at radius (0, 0). Due to the nature of texture\n    filtering Filter Radius may produce slightly different bloom kernel depending on device pixel\n    ratio (i.e. retina and non-retina displays), so you may want to adjust it dynamically depending\n    on window.devicePixelRatio or pc.app.graphicsDevice.maxPixelRatio."}),e.attributes.add("hdrformat",{title:"HDR Format",type:"number",default:pc.PIXELFORMAT_111110F,enum:[{"11 bit":pc.PIXELFORMAT_111110F},{"16 bit":pc.PIXELFORMAT_RGBA16F},{"32 bit":pc.PIXELFORMAT_RGBA32F}],description:"Preferred HDR format. Actual format chosen by system may differ due to hardware\n    compatibility. 11 bit is the best choice overall, it provides tangible performance benefits and\n    is also widely supported even on old devices like iPhone 8. If selected format is not supported\n    by target system the first valid lower format will be used."}),e.prototype.initialize=function(){this.effect=null,this.camcam=null,this.on("enable",this.handleEnable,this),this.on("disable",this.handleDisable,this),this.on("attr",this.handleAttribute,this),this.once("destroy",this.destroy,this)},e.prototype.postInitialize=function(){this.handleEnable()},e.prototype.handleEnable=function(){this.camcam=this.camera&&this.camera.camera||this.entity.camera||this.app.systems.camera.cameras[0],!this.effect&&this.camcam&&(this.effect=this.createEffect(),this.camcam.postEffects.addEffect(this.effect))},e.prototype.handleDisable=function(){this.effect&&(this.camcam&&this.camcam.postEffects.removeEffect(this.effect),this.destroyEffect(this.effect),this.effect=null)},e.prototype.handleAttribute=function(e,t){this.effect&&("camera"===e?(this.handleDisable(),this.handleEnable()):this.effect.configure({[e]:t}))},e.prototype.update=function(){this.effect&&this.updateEffect(this.effect)},e.prototype.createEffect=function(){return new BloomEffect(this.app.graphicsDevice,{blendmode:this.blendmode,iterations:this.iterations,strength:this.strength,miplimit:this.miplimit,thresholdA:this.thresholdA,thresholdB:this.thresholdB,radius:this.radius,hdrformat:this.hdrformat,tonemapper:this.app.scene.toneMapping,exposure:this.app.scene.exposure,gamma:this.app.scene.gammaCorrection})},e.prototype.updateEffect=function(e){this.app.scene.toneMapping!==pc.TONEMAP_NONE&&(e.configure({tonemapper:this.app.scene.toneMapping}),this.app.scene.toneMapping=pc.TONEMAP_NONE),this.app.scene.gammaCorrection===pc.GAMMA_SRGB||this.app.scene.gammaCorrection===pc.GAMMA_SRGBFAST?(e.configure({gamma:this.app.scene.gammaCorrection}),this.app.scene.gammaCorrection=pc.GAMMA_SRGBHDR):this.app.scene.gammaCorrection===pc.GAMMA_NONE&&e.configure({gamma:pc.GAMMA_NONE}),e.configure({exposure:this.app.scene.exposure})},e.prototype.destroyEffect=function(e){this.app.scene.toneMapping=e.params.tonemapper,this.app.scene.gammaCorrection=e.params.gamma,e.destroy()},e.prototype.destroy=function(){this.off("enable",this.handleEnable,this),this.off("disable",this.handleDisable,this),this.off("attr",this.handleAttribute,this),this.handleDisable()}})();